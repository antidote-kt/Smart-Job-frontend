name: Frontend CI/CD

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: 检出代码
      uses: actions/checkout@v4
      
    - name: 设置 Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: 安装依赖
      run: npm ci
      
    - name: 类型检查
      run: npm run type-check
      
    - name: 构建项目
      run: npm run build
      
    - name: 构建 Docker 镜像
      run: |
        docker build -t smartjob-frontend:${{ github.sha }} .
        docker tag smartjob-frontend:${{ github.sha }} smartjob-frontend:latest
        
    - name: 登录到 Docker Registry
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
      
    - name: 推送 Docker 镜像
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
      run: |
        docker tag smartjob-frontend:${{ github.sha }} ${{ secrets.DOCKER_USERNAME }}/smartjob-frontend:${{ github.sha }}
        docker tag smartjob-frontend:latest ${{ secrets.DOCKER_USERNAME }}/smartjob-frontend:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/smartjob-frontend:${{ github.sha }}
        docker push ${{ secrets.DOCKER_USERNAME }}/smartjob-frontend:latest
        
    - name: 部署到服务器
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: ${{ secrets.PORT }}
        script: |
          # 登录 Docker
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          
          # 拉取最新镜像
          docker pull ${{ secrets.DOCKER_USERNAME }}/smartjob-frontend:latest
          
          # 停止并删除旧容器（如果存在）
          docker stop smartjob-frontend || true
          docker rm smartjob-frontend || true
          
          # 启动新容器
          docker run -d \
            --name smartjob-frontend \
            --restart unless-stopped \
            -p 5173:80 \
            ${{ secrets.DOCKER_USERNAME }}/smartjob-frontend:latest
            
          # 清理旧镜像
          docker image prune -f